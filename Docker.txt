docker-compose up --build --> Erro: docker-compose.yml(Python) canviar volumes: "- ../../nom del projecte/.:/app"
docker-compose down --build

SQL --> http://127.0.0.1:8080/
API --> localhost:8000 (Postman)

API:DAM-ProjectCore-master (Python) --> app.py: application...

Android Studio --> DAM-Retrofit-master

----------------------------- README -----------------------------------------------

## Legend
- [A] Indicates that requires Authorization header (token)

## Resources

### Account Resources
- POST /account/create_token
- [A] POST /account/delete_token
- [A] GET /account/profile

### Users Resources
- POST /users/register
- [A] GET /users/show/{username:str}

- El Retrofit és una llibreria que fem anar des de Android per fer les peticions (GET,POST,PUT,DELETE…)
https://square.github.io/retrofit/

- Les taules al MySQL les inicialitza aquest script: /dev/reset_database.py


------------------------------ IP -----------------------------------

1- Fitxer de propietats (Crear)
2- Variable d'entorn
(Per guardar cada un la seva IP)

IP Emulador --> 10.0.2.2

res/xml/network_security_config.xml --> Canviar on hi ha la IP, posar la teva del Windows. (192.168.x.x)
RetrofitClientInstance --> Canviar aqui tambe la IP, posar la de Windows. (192.168.x.x:8000)


-------------------------------- No inicia el servidor -------------------------------------------

Carpeta API/docker/backend/start --> canviar amb el notepad++ el formato a Unix(LF)

---------------------------------------------------

exprecio regunalr --> API @gamil.com

-----------------------------------

variables dentorn --> export API_URL="http://192.168.43.8:8000"


SharedPreferences Android

LiveData MVVM

------------------------------ Millores (Jordi) -------------------------------------------

High Priority:
@Todo: Moure tots els strings a strings,xml
@Todo: camelCase i standards java

MIddle Priority:
@Todo: No cal tenir els x segons, quan implementeu el liveData podeu mostrar el progrés fins que no rebeu la resposta de l'API.
@Todo: MVVM no està ben implementat, per exemple el login (Activity) no hauria de saber que hi ha un servei API, ni que les dades vénen del retrofit.
@Todo: refactoritzeu, exemple

private void enableform(){
estudios.setEnabled(true);
telefono.setEnabled(true);
calendari.setEnabled(true);
}

private void disableform(){
estudios.setEnabled(false);
telefono.setEnabled(false);
calendari.setEnabled(false);
}

===

private void enableForm(boolean enable){
estudios.setEnabled(enable);
telefono.setEnabled(enable);
calendari.setEnabled(enable);
}

Less Priority:
@Todo: Guardar el salt i les iteracions al buildConfig i llegir-los de l'entorn com a constants.
@Todo: Mirar com fer un interceptor perquè m'injecti el token d'autenticació de forma automàtica sense haver de passar.


--------------------------------------- Google Calender API -----------------------------------------------------------
https://developers.google.com/calendar

Client ID API credentials --> 553611724130-t1iku5etoka092220o2cs1j69i4df315.apps.googleusercontent.com

Install the Google Client Library --> pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib